MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1.init"
Content-Type: text/plain

type = nodeway::vhacdsetup::1.0
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1 -1.94118
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	file1 1 1 "input1"
}
inputs
{
0 	file1 0 1
}
stat
{
  create 1471048040
  modify 1471048167
  author nodeway@lv-422
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1.inp"
Content-Type: text/plain

1
0 1.8234834671020508 12.825590133666992 0 5527 __NO_OWNER_NETWORK_BOX__

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/setup_attributes.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/setup_attributes.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.41981 7.59776
connectornextid 51
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress off exposed on
outputsNamed3
{
4 "output1"
}
inputsNamed3
{
5 	generate_unique_names 4 1 "input1"
}
inputs
{
0 	generate_unique_names 0 1
}
stat
{
  create 1464061935
  modify 1465210413
  author nodeway@lv-422
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/setup_attributes.spareparmdef"
Content-Type: text/plain

    groupsimple {
	name	"userdata"
	label	"User Data"
	grouptag	{ "group_type" "simple" }

	parm {
	    name	"opname"
	    label	"OP Name"
	    type	string
	    default	{ "`opname(\".\")`" }
	    range	{ 0 1 }
	    export	none
	}
    }

    group {
	name	"folder1"
	label	"Code"

	parm {
	    name	"group"
	    baseparm
	    label	"Group"
	    export	none
	    bindselector points "Modify Points"
	        "Select the points to affect and press Enter to complete."
	        0 1 0xffffffff 0 grouptype 0
	}
	parm {
	    name	"grouptype"
	    baseparm
	    label	"Group Type"
	    export	none
	}
	parm {
	    name	"class"
	    baseparm
	    label	"Run Over"
	    export	none
	}
	parm {
	    name	"vex_numcount"
	    baseparm
	    label	"Number Count"
	    export	none
	}
	parm {
	    name	"vex_threadjobsize"
	    baseparm
	    label	"Thread Job Size"
	    export	none
	}
	parm {
	    name	"snippet"
	    baseparm
	    label	"VEXpression"
	    export	all
	}
	parm {
	    name	"exportlist"
	    baseparm
	    label	"Attributes to Create"
	    export	none
	}
	parm {
	    name	"vex_strict"
	    baseparm
	    label	"Enforce Prototypes"
	    export	none
	}
    }

    group {
	name	"folder1_1"
	label	"Bindings"

	parm {
	    name	"autobind"
	    baseparm
	    label	"Autobind by Name"
	    export	none
	}
	multiparm {
	    name	"bindings"
	    label	"Number of Bindings"
	    baseparm
	    default	0
	    parmtag	{ "autoscope" "0000000000000000" }
	    parmtag	{ "multistartoffset" "1" }

	    parm {
		name	"bindname#"
		baseparm
		label	"Attribute Name"
		export	none
	    }
	    parm {
		name	"bindparm#"
		baseparm
		label	"VEX Parameter"
		export	none
	    }
	}

	parm {
	    name	"groupautobind"
	    baseparm
	    label	"Autobind Groups by Name"
	    export	none
	}
	multiparm {
	    name	"groupbindings"
	    label	"Group Bindings"
	    baseparm
	    default	0
	    parmtag	{ "autoscope" "0000000000000000" }
	    parmtag	{ "multistartoffset" "1" }

	    parm {
		name	"bindgroupname#"
		baseparm
		label	"Group Name"
		export	none
	    }
	    parm {
		name	"bindgroupparm#"
		baseparm
		label	"VEX Parameter"
		export	none
	    }
	}

	parm {
	    name	"vex_cwdpath"
	    baseparm
	    label	"Evaluation Node Path"
	    export	none
	}
	parm {
	    name	"vex_outputmask"
	    baseparm
	    label	"Export Parameters"
	    export	none
	}
	parm {
	    name	"vex_updatenmls"
	    baseparm
	    label	"Update Normals If Displaced"
	    export	none
	}
	parm {
	    name	"vex_matchattrib"
	    baseparm
	    label	"Attribute to Match"
	    export	none
	}
    }


--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/setup_attributes.chn"
Content-Type: text/plain

{
    channel opname {
      lefttype = extend
      righttype = extend
      defaultString = opname(\".\")
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = opname(\".\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = chs(\"../primitivegroupinput0\")
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../primitivegroupinput0\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/setup_attributes.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 8	locks=0	autoscope=1 ]	(	[ group	"" ] 	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"primitive"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"// ---------------------------------------------------------------------
// VARIABLES
// ---------------------------------------------------------------------
string  _opname = chs(\"opname\");
//string  _jobGroupName = chs(\"../jobgroupname\");

int     _decompositionMode = chi(\"../adddecompositionmodeattribute\");
int     _resolution = chi(\"../addresolutionattribute\");
int     _depth = chi(\"../adddepthattribute\");
int     _concavity = chi(\"../addconcavityattribute\");
int     _planeDownsampling = chi(\"../addplanedownsamplingattribute\");
int     _convexhullDownsampling = chi(\"../addconvexhulldownsamplingattribute\");
int     _alpha = chi(\"../addalphaattribute\");
int     _beta = chi(\"../addbetaattribute\");
int     _gamma = chi(\"../addgammaattribute\");
int     _maxTriangleCount = chi(\"../addmaxtrianglecountattribute\");
int     _adaptiveSampling = chi(\"../addadaptivesamplingattribute\");
int     _normalizeMesh = chi(\"../addnormalizemeshattribute\");

// ---------------------------------------------------------------------
// HELPERS
// ---------------------------------------------------------------------
#define PRINT(val) printf(\"%d\\n\", val)
#define WTF() printf(\"WTF? line: %d in: \\\"%s\\\"\\n\", __LINE__, _opname)
#define NOSUCCESS() printf(\"wasSuccess == %d in: \\\"%s\\\"\\n\", wasSuccess, _opname)

void SetIntAttribute(string attribname; int primnum, value, fallback)
{
    int success = hasprimattrib(geoself(), attribname);
    if (!success) addprimattrib(geoself(), attribname, fallback);
    
    setprimattrib(geoself(), attribname, primnum, value);
}

void SetupFloatAttribute(string attribname; int primnum; float value, fallback)
{
    int success = hasprimattrib(geoself(), attribname);
    if (!success) addprimattrib(geoself(), attribname, fallback);
    setprimattrib(geoself(), attribname, primnum, value);
}

// ---------------------------------------------------------------------
// MAIN
// ---------------------------------------------------------------------

// setup attributes
if (_decompositionMode) SetIntAttribute(\"decompositionmode\", @primnum, chi(\"../decompositionmodevalue\"), chi(\"../fallbackdecompositionmodevalue\"));
if (_resolution) SetIntAttribute(\"resolution\", @primnum, chi(\"../resolutionvalue\"), chi(\"../fallbackresolutionvalue\"));
if (_depth) SetIntAttribute(\"depth\", @primnum, chi(\"../depthvalue\"), chi(\"../fallbackdepthvalue\"));
if (_concavity) SetupFloatAttribute(\"concavity\", @primnum, chf(\"../concavityvalue\"), chf(\"../fallbackconcavityvalue\"));
if (_planeDownsampling) SetIntAttribute(\"planedownsampling\", @primnum, chi(\"../planedownsamplingvalue\"), chi(\"../fallbackplanedownsamplingvalue\"));
if (_convexhullDownsampling) SetIntAttribute(\"convexhulldownsampling\", @primnum, chi(\"../convexhulldownsamplingvalue\"), chi(\"../fallbackconvexhulldownsamplingvalue\"));
if (_alpha) SetupFloatAttribute(\"alpha\", @primnum, chf(\"../alphavalue\"), chf(\"../fallbackalphavalue\"));
if (_beta) SetupFloatAttribute(\"beta\", @primnum, chf(\"../betavalue\"), chf(\"../fallbackbetavalue\"));
if (_gamma) SetupFloatAttribute(\"gamma\", @primnum, chf(\"../gammavalue\"), chf(\"../fallbackgammavalue\"));
if (_maxTriangleCount) SetIntAttribute(\"maxtrianglecount\", @primnum, chi(\"../maxtrianglecountvalue\"), chi(\"../fallbackmaxtrianglecountvalue\"));
if (_adaptiveSampling) SetupFloatAttribute(\"adaptivesampling\", @primnum, chf(\"../adaptivesamplingvalue\"), chf(\"../fallbackadaptivesamplingvalue\"));
if (_normalizeMesh) SetIntAttribute(\"normalizemesh\", @primnum, chi(\"../normalizemeshvalue\"), chi(\"../fallbacknormalizemeshvalue\"));

// create job group
/*
if (_processMode || _decompositionMode || _resolution || _depth || _concavity || _planeDownsampling || _convexhullDownsampling || _alpha || _beta || _gamma || _maxTriangleCount || _adaptiveSampling || _normalizeMesh)
{
    setprimgroup(geoself(), _jobGroupName, i@primnum, 1);
}
*/"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
userdata	[ 0	locks=0 ]	(	1	)
opname	[ 0	locks=0	autoscope=1 ]	(	[ opname	setup_attributes ] 	)
folder1	[ 0	locks=0 ]	(	0	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/setup_attributes.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/OUT_Geometry.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/OUT_Geometry.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.41981 5.60345
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	setup_attributes 4 1 "input1"
}
inputs
{
0 	setup_attributes 0 1
}
stat
{
  create 1464682291
  modify 1465210415
  author nodeway@lv-422
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/OUT_Geometry.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/OUT_Geometry.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"15.5.565"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/IN_Geometry.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/IN_Geometry.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.41981 11.6112
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create 1464742292
  modify 1465210402
  author nodeway@lv-422
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/IN_Geometry.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/IN_Geometry.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"15.5.565"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/generate_unique_names.init"
Content-Type: text/plain

type = python
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/generate_unique_names.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.41981 8.59776
connectornextid 17
flags =  lock off model off template off footprint off xray off bypass on display off render off highlight off unload off savedata off compress off exposed on
outputsNamed3
{
4 "output1"
}
inputsNamed3
{
0 	switch1 0 1 "input1"
}
inputs
{
0 	switch1 0 1
}
stat
{
  create 1465053787
  modify 1465210413
  author nodeway@lv-422
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/generate_unique_names.parm"
Content-Type: text/plain

{
version 0.8
python	[ 0	locks=0 ]	(	"# ---------------------------------------------------------------------
# VARIABLES
# ---------------------------------------------------------------------
node = hou.pwd()
geo = node.geometry()
parent = node.parent()

# ---------------------------------------------------------------------
# HELPERS
# ---------------------------------------------------------------------
class NameGenerator():
    @staticmethod  
    def __new_unique_name__(name, step, type):
        '''
        '''
        
        uniqueName = ''
        
        if step == 0: uniqueName = name
        else: uniqueName = '{0}{1}'.format(name, step)        
        
        wasSuccess = None
        try: 
            if type == 'pointgroup':
                wasSuccess = geo.findPointGroup(uniqueName) 
            elif type == 'edgegroup':
                wasSuccess = geo.findEdgeGroup(uniqueName) 
            elif type == 'primitivegroup':
                wasSuccess = geo.findPrimGroup(uniqueName) 
            elif type == 'vertexattribute':
                wasSuccess = geo.findVertexAttrib(uniqueName)                
            elif type == 'pointattribute':
                wasSuccess = geo.findPointAttrib(uniqueName)
            elif type == 'primitiveattribute':
                wasSuccess = geo.findPrimAttrib(uniqueName)
            elif type == 'detailattribute':
                wasSuccess = geo.findGlobalAttrib(uniqueName)
                   
        except: wasSuccess = None
        
        if wasSuccess != None:
            step += 1
            uniqueName = NameGenerator.__new_unique_name__(name, step, type)
        
        return uniqueName

    @staticmethod        
    def UniquePointGroupName(name, step = 0):
        return NameGenerator.__new_unique_name__(name, step, 'pointgroup')
    
    @staticmethod        
    def UniqueEdgeGroupName(name, step = 0):
        return NameGenerator.__new_unique_name__(name, step, 'edgegroup')
        
    @staticmethod        
    def UniquePrimitiveGroupName(name, step = 0):
        return NameGenerator.__new_unique_name__(name, step, 'primitivegroup')
        
    @staticmethod        
    def UniqueVertexAttibName(name, step = 0):
        return NameGenerator.__new_unique_name__(name, step, 'vertexattribute')
        
    @staticmethod        
    def UniquePointAttibName(name, step = 0):
        return NameGenerator.__new_unique_name__(name, step, 'pointattribute')

    @staticmethod        
    def UniquePrimitiveAttribName(name, step = 0):
        return NameGenerator.__new_unique_name__(name, step, 'primitiveattribute')
    
    @staticmethod        
    def UniqueDetailAttribName(name, step = 0):
        return NameGenerator.__new_unique_name__(name, step, 'detailattribute')          
        
# ---------------------------------------------------------------------
# MAIN
# ---------------------------------------------------------------------
name = NameGenerator.UniquePrimitiveGroupName('vhacd_job');
parent.parm('jobgroupname').set(name)"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/generate_unique_names.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"15.5.565"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/delete1.init"
Content-Type: text/plain

type = delete
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/delete1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.41981 10.6095
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	IN_Geometry 1 1 "input1"
}
inputs
{
0 	IN_Geometry 0 1
}
stat
{
  create 1465210365
  modify 1465210408
  author nodeway@lv-422
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/delete1.chn"
Content-Type: text/plain

{
    channel rangeend {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = $N }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = chs(\"../primitivegroupinput0\")
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = chs(\"../primitivegroupinput0\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/delete1.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0	autoscope=1 ]	(	[ group	Foot_BL ] 	)
negate	[ 0	locks=0 ]	(	"keep"	)
entity	[ 0	locks=0 ]	(	"primitive"	)
geotype	[ 0	locks=0 ]	(	"all"	)
stdswitcher	[ 0	locks=0 ]	(	0	0	0	0	)
affectnumber	[ 0	locks=0 ]	(	"on"	)
groupop	[ 0	locks=0 ]	(	"pattern"	)
filter	[ 8	locks=0 ]	(	1	)
pattern	[ 0	locks=0 ]	(	!*	)
range	[ 8	locks=0 ]	(	0	[ rangeend	0 ] 	)
select	[ 0	locks=0 ]	(	1	2	)
affectvolume	[ 0	locks=0 ]	(	"off"	)
boundtype	[ 0	locks=0 ]	(	"usebbox"	)
size	[ 0	locks=0 ]	(	1	1	1	)
t	[ 0	locks=0 ]	(	0	0	0	)
affectnormal	[ 0	locks=0 ]	(	"off"	)
dir	[ 0	locks=0 ]	(	0	0	1	)
angle	[ 0	locks=0 ]	(	180	)
camerapath	[ 0	locks=0 ]	(	""	)
affectdegenerate	[ 0	locks=0 ]	(	"off"	)
degenerate	[ 0	locks=0 ]	(	"off"	)
zaf	[ 0	locks=0 ]	(	"off"	)
doopen	[ 0	locks=0 ]	(	"off"	)
tol	[ 0	locks=0 ]	(	0.001	)
removegrp	[ 0	locks=0 ]	(	"on"	)
keeppoints	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/delete1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"15.5.565"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/switch1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/switch1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.41981 9.60952
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress off exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	IN_Geometry 1 1 "input1"
2 	delete1 1 1 "input2"
}
inputs
{
0 	IN_Geometry 0 1
1 	delete1 0 1
}
stat
{
  create 1465210373
  modify 1465210410
  author nodeway@lv-422
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/switch1.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../sologroup\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/switch1.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1/switch1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"15.5.565"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1.order"
Content-Type: text/plain

6
setup_attributes
OUT_Geometry
IN_Geometry
generate_unique_names
delete1
switch1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="vhacdsetup1.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
