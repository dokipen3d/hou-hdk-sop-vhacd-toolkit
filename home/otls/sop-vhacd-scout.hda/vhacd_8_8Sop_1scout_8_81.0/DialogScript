# Dialog script for vhacd::scout::1.0 automatically generated

{
    name	vhacd::scout::1.0
    script	vhacd::scout::1.0
    label	"Scout (v-hacd)"

    help {
	""
    }

    inputlabel	1	"Convex Hulls"
    inputlabel	2	"Original Geometry"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"

    group {
	name	"hidden"
	label	"Hidden"
	invisibletab
	tabbreak

	parm {
	    name	"is0connected"
	    label	"Is 0 Connected?"
	    type	toggle
	    joinnext
	    default	{ "1" }
	    range	{ 0 1 }
	}
	parm {
	    name	"sepparm2"
	    label	"Separator"
	    type	separator
	    default	{ "" }
	    range	{ 0 1 }
	}
	parm {
	    name	"is1connected"
	    label	"Is 1 Connected?"
	    type	toggle
	    joinnext
	    default	{ "1" }
	    range	{ 0 1 }
	}
	parm {
	    name	"sepparm7"
	    label	"Separator"
	    type	separator
	    default	{ "" }
	    range	{ 0 1 }
	}
    }

    groupsimple {
	name	"mainsection"
	label	"Main"

	parm {
	    name	"createhullcountattribute"
	    label	"Add Hull Count ATT"
	    type	toggle
	    joinnext
	    default	{ "0" }
	    help	"Creates detail attribute that contains information about how many convex hulls were detected."
	    range	{ 0 1 }
	}
	parm {
	    name	"sepparm3"
	    label	"Separator"
	    type	separator
	    default	{ "" }
	    range	{ 0 1 }
	}
	parm {
	    name	"createbundlecountattribute"
	    label	"Add Bundle Count ATT"
	    type	toggle
	    joinnext
	    default	{ "0" }
	    help	"Creates detail attribute that counts bundles."
	    hidewhen	"{ is1connected == 0 }"
	    range	{ 0 1 }
	}
	parm {
	    name	"sepparm8"
	    label	"Separator"
	    type	separator
	    default	{ "" }
	    hidewhen	"{ is1connected == 0 }"
	    range	{ 0 1 }
	}
	parm {
	    name	"createhullidattribute"
	    label	"Add Hull ID ATT"
	    type	toggle
	    joinnext
	    default	{ "0" }
	    help	"Creates primitive attribute that helps identify to which convex hull polygons belongs."
	    range	{ 0 1 }
	}
	parm {
	    name	"sepparm4"
	    label	"Separator"
	    type	separator
	    default	{ "" }
	    range	{ 0 1 }
	}
	parm {
	    name	"creategrouppereachhull"
	    label	"GRP Per Hull"
	    type	toggle
	    joinnext
	    default	{ "0" }
	    help	"Creates group per each detected convex hull."
	    range	{ 0 1 }
	    parmtag	{ "script_callback" "hou.phm().groupPerHull.Callback(kwargs)" }
	    parmtag	{ "script_callback_language" "python" }
	}
	parm {
	    name	"sepparm5"
	    label	"Separator"
	    type	separator
	    default	{ "" }
	    range	{ 0 1 }
	}
	parm {
	    name	"specifyhullgroupname"
	    label	"Name"
	    type	string
	    default	{ "hull_" }
	    help	"Pick partial name of generated groups."
	    hidewhen	"{ creategrouppereachhull == 0 }"
	    range	{ 0 1 }
	}
	parm {
	    name	"creategrouppereachhullbundle"
	    label	"GRP Per Bundle"
	    type	toggle
	    joinnext
	    default	{ "0" }
	    help	"Creates group per each detected convex hull bundle."
	    hidewhen	"{ is1connected == 0 }"
	    range	{ 0 1 }
	    parmtag	{ "script_callback" "hou.phm().groupPerBundle.Callback(kwargs)" }
	    parmtag	{ "script_callback_language" "python" }
	}
	parm {
	    name	"sepparm6"
	    label	"Separator"
	    type	separator
	    default	{ "" }
	    hidewhen	"{ is1connected == 0 }"
	    range	{ 0 1 }
	}
	parm {
	    name	"specifybundlegroupname"
	    label	"Name"
	    type	string
	    default	{ "bundle_" }
	    help	"Pick partial name of generated groups."
	    hidewhen	"{ is1connected == 0 } { creategrouppereachhullbundle == 0 }"
	    range	{ 0 1 }
	}
    }

    groupsimple {
	name	"additionalsection"
	label	"Additional"

	parm {
	    name	"adddescription"
	    label	"Description"
	    type	toggle
	    joinnext
	    default	{ "0" }
	    help	"Additional description displayed bellow node name in network view."
	    range	{ 0 1 }
	    parmtag	{ "script_callback" "hou.phm().description.Callback(kwargs)" }
	    parmtag	{ "script_callback_language" "python" }
	}
	parm {
	    name	"sepparm"
	    label	"Separator"
	    type	separator
	    default	{ "" }
	    range	{ 0 1 }
	}
	parm {
	    name	"cleandescription"
	    label	"Clean"
	    type	button
	    default	{ "1" }
	    help	"Cleans message field."
	    hidewhen	"{ adddescription == 0 }"
	    range	{ 0 1 }
	    parmtag	{ "script_callback" "hou.phm().description.SetDefaultState(hou.pwd())" }
	    parmtag	{ "script_callback_language" "python" }
	}
	parm {
	    name	"descriptionmessage"
	    label	"Message"
	    type	string
	    default	{ "" }
	    help	"Message content that will be displayed below node name in network view."
	    hidewhen	"{ adddescription == 0 }"
	    range	{ 0 1 }
	    parmtag	{ "editor" "1" }
	    parmtag	{ "editorlines" "5-25" }
	}
    }

}
