#[[
	CMakeLists.txt for SOP_VHACDEngine.

	IMPORTANT! ------------------------------------------	
	* Variables starting and ending with ____ are not used anywhere outside of this file.	
	* External variables used:
		HOUDINI_LIBRARIES 			- comes from "hou-hdk-common/cmake/Modules/FindHoudini.cmake"
		BASE_SOURCE_FILES			- generated by macro HOU_GET_BASE_SOURCE_FILES()
	* External functions used:	
		HOU_SET_DSO_OUTPUTS() 		- comes from "hou-hdk-common/cmake/Modules/FindHoudini.cmake"
	* External macros used:	
		HOU_GET_BASE_SOURCE_FILES() - comes from master "hou-hdk-common/CMakeLists.txt"
	-----------------------------------------------------

	Author: 	Nodeway (2017)
	Email:		nodeway@hotmail.com

	LICENSE ------------------------------------------

	Copyright (c) 2017 Nodeway
	All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
	3. The names of the contributors may not be used to endorse or promote products derived from this software without specific prior written permission.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
]]

Project(SOP_VHACD)

# set available compile configuration types
set(CMAKE_CONFIGURATION_TYPES "Debug;Release;RelWithDebInfo")

if(NOT DEFINED ENV{GIT_PATH})
	Message(FATAL_ERROR "GIT_PATH environment variable is not defined.")
else()	
	# get all base source files		
	Set(___base_source_files____
		"$ENV{GIT_PATH}/hou-hdk-common/source/Enum_AttributeClass.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/Enum_GeometryComponentClass.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/Enum_NodeErrorLevel.h"
		
		"$ENV{GIT_PATH}/hou-hdk-common/source/Utility_GeometryTesting.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/Utility_AttributeAccessing.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/Utility_ParameterAccessing.h"
		
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_CookMySop.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_DescriptionPRM.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_FloatPRM.h"		
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_IntegerPRM.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_Namespace.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_ParameterList.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_SeparatorPRM.h"		
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_SwitcherPRM.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_TogglePRM.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/Macros_UpdateParmsFlags.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/SOP_Base_Operator.h"
		"$ENV{GIT_PATH}/hou-hdk-common/source/SOP/SOP_Base_Operator.cpp"		
	)
	
	# get all 3rd party source files
	Set(____3rd_party_source_files____ 		
		"../3rdParty/include/VHACD.h"
	)	
	
	# get all source files
	Set(____source_files____		
		"source/SOP_VHACDEngine_Parameters.h"
		"source/SOP_VHACDEngine_Operator.h"
		"source/SOP_VHACDEngine_Operator.cpp"
		"source/SOP_VHACDEngine_Registration.cpp"
		${___base_source_files____}
		${____3rd_party_source_files____}
	)
		
	# get all 3rd party libraries
	Set(____houdini_libraries____ ${HOUDINI_LIBRARIES} "../3rdParty/lib/$(ConfigurationName)/*")
	
	# create library
	Add_Library(${PROJECT_NAME} SHARED ${____source_files____})
	Target_Link_Libraries(${PROJECT_NAME} ${____houdini_libraries____})

	# specify destination path	
	HOU_SET_DSO_OUTPUTS(${CMAKE_CURRENT_SOURCE_DIR} ${PROJECT_NAME})
endif()